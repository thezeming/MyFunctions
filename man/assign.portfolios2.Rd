% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign.portfolios2.R
\name{assign.portfolios2}
\alias{assign.portfolios2}
\title{Assign Portfolios}
\usage{
assign.portfolios2(
  data,
  break_var,
  sort_var,
  bps = NULL,
  n_portfolios = 10,
  P_prefix = "P",
  bp_prefix = "bp",
  show_bps = FALSE,
  bp_type = 2
)
}
\arguments{
\item{data}{A tibble that (normally) contains at least two variables, one is used to compute breakpoints and the other is used to compute portfolio membership.
In the case that the breakpoints are computed from the sorting variable itself, the tibble could potentially contain only one variable.}

\item{break_var}{The variable that is used to compute breakpoints.}

\item{sort_var}{The variable that is used to compute portfolio membership.}

\item{bps}{A numerical vector specifying customised preakpoints.
It should contain only the breakpoints not the end values.
For example, for a tercile sort, this value should be c(0.2, 0.8), not c(0, 0.2, 0.8, 1).}

\item{n_portfolios}{A possitive integer.
This is the umber of portfolios to which assets are evenly assigned.
Breakpoints are computed evenly across the range in each cross-section.
This argument will be ignored if the argument bps is provided.}

\item{P_prefix}{The prefix to be placed in front of the two portfolio membership column names.}

\item{bp_prefix}{This is the prefix to be placed in front of breakpoint numbers.
This will be part of the column names for the breakpoint columns.
The default is 'bp', which gives column names bp1, bp2, ...}

\item{show_bps}{A Boolean value indicating whether to retain breakpoints in the output dataframe.
When FALSE, the breakpoints will not be shown and the argument bp_prefix will be ignored.}

\item{bp_type}{An integer between 1 and 9 selecting one of the nine quantile algorithms used by quantile(), see which for details.
The default value is 2 which is the default algorithm used by SAS.}
}
\value{
A tibble that adds at least two columns that contains primary and secondary group memberships.
If show_bps is TRUE, then each breakpint column gives the breakpoint used for computing membership.
}
\description{
This function is a simplified version of assign.portfolios.
It assigns each of the assets to a portfolio in the cross-section.
By default, it mutates two new columns indicating the group memberships of each row.
The first column gives results by (], whereas the second gives results by [).
Further operations required if the portfolio sorting method as in Bali et al. (2016) is to be implemented. (i.e., for a border asset to be assigned to two portfolios in a given cross-section.)
For example, one could replace the values in the second column with NA when it is the same with the first column and then pivot_longer with values_drop_na = TRUE.
}
\details{
\strong{CAUTION:}
\itemize{
\item Be careful not to do a second sort after this, since the number of observations, thus breakpoints, may change for the second sort. Finish all the sorts before this operation.
\item This function cannot be applied to grouped tibble as the computation of breakpoints would be across all groups, instead of for each group. Use reframe() and apply it to each group respectively instead.
}
}
